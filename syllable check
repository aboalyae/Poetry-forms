import unittest
from func import check_syllables
from funct import counting_syllables
word_to_phonemes = {'NEXT': ['N', 'EH1', 'K', 'S', 'T'],
                         'GAP': ['G', 'AE1', 'P'],
                         'BEFORE': ['B', 'IH0', 'F', 'AO1', 'R'],
                         'LEADS': ['L', 'IY1', 'D', 'Z'],
                         'WITH': ['W', 'IH1', 'DH'],
                         'LINE': ['L', 'AY1', 'N'],
                         'THEN': ['DH', 'EH1', 'N'],
                         'THE': ['DH', 'AH0'], 
                         'A': ['AH0'], 
                         'FIRST': ['F', 'ER1', 'S', 'T'], 
                         'ENDS': ['EH1', 'N', 'D', 'Z'],
                         'POEM': ['P', 'OW1', 'AH0', 'M'],
                         'OFF': ['AO1', 'Fx']}
class test_check_syllables(unittest.TestCase):
    def test_01_two_mismatched_lines(self):
        poem_lines = ['The first line leads off,', 'With a gap before the next.', 'Then the poem ends.']
        pattern = ([5, 5, 4], ['*', '*', '*'])
        self.assertEqual((check_syllables(poem_lines,pattern,word_to_phonemes)),['With a gap before the next.', 'Then the poem ends.'])
    def test_02_all_match(self):
        poem_lines = ['The first line leads off,', 'With a gap before the next.', 'Then the poem ends.']
        pattern = ([5, 7, 5], ['*', '*', '*'])
        self.assertEqual((check_syllables(poem_lines,pattern,word_to_phonemes)),[])
    def test_03_syllables_dont_matter(self):
        poem_lines = ['The first line leads off,', 'With a gap before the next.', 'Then the poem ends.']
        pattern = ([0, 0, 0], ['*', '*', '*'])
        self.assertEqual((check_syllables(poem_lines,pattern,word_to_phonemes)),[])
    def test_04_all_dont_match(self):
        poem_lines = ['The first line leads off,', 'With a gap before the next.', 'Then the poem ends.']
        pattern = ([40, 30, 20], ['*', '*', '*'])
        self.assertEqual((check_syllables(poem_lines,pattern,word_to_phonemes)),['The first line leads off,', 'With a gap before the next.', 'Then the poem ends.'])
    def test_05_empty_line(self):
        poem_lines = ['']
        pattern = ([1],['*'])
        self.assertEqual((check_syllables(poem_lines,pattern,word_to_phonemes)),[''])
    def test_06_blankspace_line(self):
        poem_lines = ['     ']
        pattern = ([1],['*'])
        self.assertEqual((check_syllables(poem_lines,pattern,word_to_phonemes)),['     '])
    def test_07_uppercase_line(self):
        poem_lines = ['THE FIRST LINE LEADS OFF,','the first line leads off,']
        pattern = ([5,5],['*','*'])
        self.assertEqual((check_syllables(poem_lines,pattern,word_to_phonemes)),[])
    
   
unittest.main(exit=False)
